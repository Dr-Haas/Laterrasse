#!/bin/bash

# Script de test simple pour l'API La Terrasse
# Usage: chmod +x test-api.sh && ./test-api.sh

BASE_URL="http://localhost:3001"

echo "üß™ Test de l'API La Terrasse"
echo "=============================="
echo ""

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Test 1: Health Check
echo -e "${YELLOW}1. Test Health Check${NC}"
response=$(curl -s -o /dev/null -w "%{http_code}" $BASE_URL/health)
if [ $response -eq 200 ]; then
    echo -e "${GREEN}‚úÖ Health check OK${NC}"
else
    echo -e "${RED}‚ùå Health check √©chou√© (code: $response)${NC}"
fi
echo ""

# Test 2: R√©cup√©rer le menu
echo -e "${YELLOW}2. Test r√©cup√©ration du menu${NC}"
response=$(curl -s -o /dev/null -w "%{http_code}" $BASE_URL/api/menu)
if [ $response -eq 200 ]; then
    echo -e "${GREEN}‚úÖ Menu r√©cup√©r√©${NC}"
    echo "Aper√ßu:"
    curl -s $BASE_URL/api/menu | head -c 200
    echo "..."
else
    echo -e "${RED}‚ùå √âchec r√©cup√©ration menu (code: $response)${NC}"
fi
echo ""
echo ""

# Test 3: Inscription
echo -e "${YELLOW}3. Test inscription${NC}"
email="test_$(date +%s)@test.com"
response=$(curl -s -X POST $BASE_URL/api/auth/register \
  -H "Content-Type: application/json" \
  -d "{\"email\":\"$email\",\"password\":\"test123\",\"username\":\"TestUser\"}" \
  -w "\n%{http_code}")

http_code=$(echo "$response" | tail -n 1)
body=$(echo "$response" | head -n -1)

if [ $http_code -eq 201 ]; then
    echo -e "${GREEN}‚úÖ Inscription r√©ussie${NC}"
    token=$(echo $body | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
    echo "Token: ${token:0:30}..."
else
    echo -e "${RED}‚ùå Inscription √©chou√©e (code: $http_code)${NC}"
    echo "$body"
fi
echo ""

# Test 4: Connexion
echo -e "${YELLOW}4. Test connexion (compte admin)${NC}"
response=$(curl -s -X POST $BASE_URL/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"email":"admin@laterrasse.fr","password":"password123"}' \
  -w "\n%{http_code}")

http_code=$(echo "$response" | tail -n 1)
body=$(echo "$response" | head -n -1)

if [ $http_code -eq 200 ]; then
    echo -e "${GREEN}‚úÖ Connexion r√©ussie${NC}"
    admin_token=$(echo $body | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
    echo "Token admin: ${admin_token:0:30}..."
else
    echo -e "${RED}‚ùå Connexion √©chou√©e (code: $http_code)${NC}"
    echo "$body"
fi
echo ""

# Test 5: R√©cup√©rer les posts
echo -e "${YELLOW}5. Test r√©cup√©ration des posts${NC}"
response=$(curl -s -o /dev/null -w "%{http_code}" $BASE_URL/api/posts)
if [ $response -eq 200 ]; then
    echo -e "${GREEN}‚úÖ Posts r√©cup√©r√©s${NC}"
else
    echo -e "${RED}‚ùå √âchec r√©cup√©ration posts (code: $response)${NC}"
fi
echo ""

# Test 6: Top scores
echo -e "${YELLOW}6. Test r√©cup√©ration des top scores${NC}"
response=$(curl -s $BASE_URL/api/game-scores/top?limit=5)
echo "$response" | head -c 200
echo "..."
echo -e "${GREEN}‚úÖ Top scores r√©cup√©r√©s${NC}"
echo ""

# Test 7: L√©gendes
echo -e "${YELLOW}7. Test r√©cup√©ration des l√©gendes${NC}"
response=$(curl -s -o /dev/null -w "%{http_code}" $BASE_URL/api/legends)
if [ $response -eq 200 ]; then
    echo -e "${GREEN}‚úÖ L√©gendes r√©cup√©r√©es${NC}"
else
    echo -e "${RED}‚ùå √âchec r√©cup√©ration l√©gendes (code: $response)${NC}"
fi
echo ""

# R√©sum√©
echo "=============================="
echo -e "${GREEN}‚ú® Tests termin√©s !${NC}"
echo ""
echo "Pour tester manuellement:"
echo "  - Health: curl $BASE_URL/health"
echo "  - Menu:   curl $BASE_URL/api/menu"
echo "  - Posts:  curl $BASE_URL/api/posts"
echo ""
echo "Utilisez Postman ou Insomnia pour des tests plus avanc√©s."

